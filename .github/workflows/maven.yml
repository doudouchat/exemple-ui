name: build
on:
- push
- pull_request
- workflow_dispatch
jobs:
   build:
      runs-on: ubuntu-latest
      steps:
      -  uses: actions/checkout@v3
      -  name: Get npm cache directory
         id: npm-cache-dir
         shell: bash
         run: |
           echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      -  name: Cache SonarCloud packages
         uses: actions/cache@v3
         with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
      -  uses: actions/cache@v3
         id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
         with:
           path: ${{ steps.npm-cache-dir.outputs.dir }}
           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
           restore-keys: |
            ${{ runner.os }}-node-
      -  name: Use Node.js 20.5.0
         uses: actions/setup-node@v3
         with:
            node-version: 20.5.0
      -  name: install
         working-directory: exemple-ui-front
         run: npm ci
      -  name: build
         working-directory: exemple-ui-front
         run: npm run-script build
      -  name: test
         working-directory: exemple-ui-front
         run: npm run-script test
      -  name: lint
         working-directory: exemple-ui-front
         run: npm run-script lint
      -  name: audit
         working-directory: exemple-ui-front
         run: |
           npm audit --audit-level=none --omit=dev
           npm audit --audit-level=none
      -  uses: codecov/codecov-action@v3
      -  name: SonarCloud Scan
         uses: SonarSource/sonarcloud-github-action@master
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
